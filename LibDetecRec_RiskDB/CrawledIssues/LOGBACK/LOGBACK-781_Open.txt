{
    "errorCollection": {
        "errorMessages": [], 
        "errors": {}
    }, 
    "fields": [], 
    "removedContentIds": {}, 
    "atl_token": "APH4-RW9H-DTE9-IR2M|55104ab9fa3e891e912856bba5d99a972d754188|lout", 
    "panels": {
        "leftPanels": [
            {
                "weight": 100, 
                "headerLinks": {
                    "groups": [], 
                    "links": []
                }, 
                "contentId": "583548fef8d994d5409e64f59749187c", 
                "subpanelHtmls": [], 
                "label": "Details", 
                "completeKey": "com.atlassian.jira.jira-view-issue-plugin:details-module", 
                "prefix": "", 
                "html": "\n\n\n\n\n\n\n\n\n\n\n<ul id=\"issuedetails\" class=\"property-list two-cols\">\n                \n<li class=\"item\">\n    <div class=\"wrap\">\n        <strong class=\"name\">Type:</strong>\n        <span id=\"type-val\" class=\"value\">\n                        <img  alt=\"\" height=\"16\" src=\"/secure/viewavatar?size=xsmall&amp;avatarId=11110&amp;avatarType=issuetype\" title=\"Improvement - An improvement or enhancement to an existing feature or task.\" width=\"16\" /> Improvement\n        </span>\n    </div>\n</li>                    <li class=\"item item-right\">\n    <div class=\"wrap\">\n        <strong class=\"name\">Status:</strong>\n            <span id=\"status-val\" class=\"value\">\n                                <span class=\" jira-issue-status-lozenge aui-lozenge jira-issue-status-lozenge-blue-gray jira-issue-status-lozenge-new jira-issue-status-lozenge-max-width-medium\" data-tooltip=\"&lt;span class=&quot;jira-issue-status-tooltip-title&quot;&gt;Open&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;jira-issue-status-tooltip-desc&quot;&gt;The issue is open and ready for the assignee to start work on it.&lt;/span&gt;\">Open</span>            </span>\n            </div>\n</li>    \n                        <li class=\"item new\">\n    <div class=\"wrap\">\n        <strong class=\"name\">Priority:</strong>\n        <span id=\"priority-val\" class=\"value\">\n                                        <img  alt=\"\" height=\"16\" src=\"/images/icons/priorities/minor.svg\" title=\"Minor - Minor loss of function, or other problem where easy workaround is present.\" width=\"16\" /> Minor\n                    </span>\n    </div>\n</li>                                \n<li class=\"item item-right\">\n    <div class=\"wrap\">\n        <strong class=\"name\">Resolution:</strong>\n        <span id=\"resolution-val\" class=\"value unresolved\" >\n                            Unresolved\n                    </span>\n    </div>\n</li>                                \n\n<li class=\"item\">\n    <div class=\"wrap\">\n        <strong class=\"name\">Affects Version/s:</strong>\n        <span id=\"versions-val\" class=\"value\">\n                                        <span class=\"shorten\" id=\"versions-field\">\n                                            <span title=\"1.0.9 \">1.0.9</span>                                    </span>\n                    </span>\n    </div>\n</li>                                \n<li class=\"item item-right\">\n    <div class=\"wrap\">\n        <strong class=\"name\">Fix Version/s:</strong>\n        <span id=\"fixfor-val\" class=\"value\">\n                                        None\n                    </span>\n    </div>\n</li>                                \n\n<li class=\"item\">\n    <div class=\"wrap\">\n        <strong class=\"name\">Component/s:</strong>\n        <span id=\"components-val\" class=\"value\">\n                                        None\n                    </span>\n    </div>\n</li>                                    \n\n\n<li class=\"item full-width\">\n    <div class=\"wrap\" id=\"wrap-labels\">\n        <strong class=\"name\">Labels:</strong>\n                <div class=\"labels-wrap value\">\n            <span class=\"labels\" id=\"labels-11393-value\">None</span>\n            </div>\n    </div>\n</li>            </ul>\n\n", 
                "renderHeader": true, 
                "styleClass": "", 
                "id": "details-module"
            }, 
            {
                "weight": 200, 
                "headerLinks": {
                    "groups": [], 
                    "links": []
                }, 
                "contentId": "c957317f5f527dfd23cac6ce59003fa6", 
                "subpanelHtmls": [], 
                "label": "Description", 
                "completeKey": "com.atlassian.jira.jira-view-issue-plugin:descriptionmodule", 
                "prefix": "", 
                "html": "<div id=\"description-val\" class=\"field-ignore-highlight\">\n    <div class=\"user-content-block\">\n                    <p>ch.qos.logback.classic.LoggerContext.getLogger() is hard to understand; it can be shortend with a little recursion. Just a suggestion. I will have to run this modified code to see whether it works, I haven't done so yet. </p>\n\n<p>Additionally, a few edge cases should be checked, right?</p>\n\n<p>== Original ==</p>\n\n<p>-------------------<br/>\n    public final Logger getLogger(final String name) {</p>\n\n<p>        if (name == null) </p>\n{\n            throw new IllegalArgumentException(\"name argument cannot be null\");\n        }\n\n<p>        // if we are asking for the root logger, then let us return it without<br/>\n        // wasting time<br/>\n        if (Logger.ROOT_LOGGER_NAME.equalsIgnoreCase(name)) </p>\n{\n            return root;\n        }<br/>\n<br/>\n        int i = 0;<br/>\n        Logger logger = root;<br/>\n<br/>\n        // check if the desired logger exists, if it does, return it<br/>\n        // without further ado.<br/>\n        Logger childLogger = (Logger) loggerCache.get(name);<br/>\n        // if we have the child, then let us return it without wasting time<br/>\n        if (childLogger != null) {\n            return childLogger;\n        }<br/>\n<br/>\n        // if the desired logger does not exist, them create all the loggers<br/>\n        // in between as well (if they don't already exist)<br/>\n        String childName;<br/>\n        while (true) {<br/>\n            int h = LoggerNameUtil.getSeparatorIndexOf(name, i);<br/>\n            if (h == -1) {\n                childName = name;\n            } else {\n                childName = name.substring(0, h);\n            }<br/>\n            // move i left of the last point<br/>\n            i = h + 1;<br/>\n            synchronized (logger) {<br/>\n                childLogger = logger.getChildByName(childName);<br/>\n                if (childLogger == null) {\n                    childLogger = logger.createChildByName(childName);\n                    loggerCache.put(childName, childLogger);\n                    incSize();\n                }<br/>\n            }<br/>\n            logger = childLogger;<br/>\n            if (h == -1) {\n                return childLogger;\n            }<br/>\n        }<br/>\n    }<br/>\n-------------------<br/>\n<br/>\n== With recursion ==<br/>\n<br/>\n<br/>\n    public final Logger getLogger(final String name) {<br/>\n        if (name == null) {\n            throw new IllegalArgumentException(\"name argument cannot be null\");\n            // can it be empty though??\n        }<br/>\n        // if we are asking for the root logger, then let us return it without wasting time<br/>\n        // note that this is not the empty name but \"ROOT\"<br/>\n        if (Logger.ROOT_LOGGER_NAME.equalsIgnoreCase(name)) {            return root;        }\n<p>        // check if the desired logger exists, if it does, return it without further ado.<br/>\n        {<br/>\n            Logger childLogger = (Logger) loggerCache.get(name);<br/>\n            if (loggerCache.get(name) != null) </p>\n{\n                return childLogger;\n            }\n<p>        }<br/>\n        // if the desired logger does not exist, then create all the loggers in between as well (if they don't exist yet)<br/>\n        // this means<br/>\n        // 1) splitting the \"name\" along the DOT/DOLLAR separators (but refusing the empty string result)<br/>\n        // 2) creating all the loggers along that path if they don't exist yet<br/>\n        createLoggerPathRecursively(name, \"\", 0, root);<br/>\n    }</p>\n\n<p>    /**</p>\n<ul>\n\t<li>Recursively build logger path</li>\n\t<li>On the first call, \"originalName\" is the full logger name, \"currentName\" is the empty string,</li>\n\t<li>currentPos (the position beyond which to search for logger name components) is 0 and</li>\n\t<li>\"parentLogger\" is the \"root\"<br/>\n     */</li>\n</ul>\n\n\n<p>    private void createLoggerPathRecursively(String originalName, String currentName, int currentPos, Logger parentLogger) {<br/>\n        assert originalName != null;<br/>\n        assert currentName != null;<br/>\n        assert currentPos &gt;= 0;<br/>\n        assert parentLogger != null;<br/>\n        if (currentPos &gt;= originalName.length()) </p>\n{\n            throw new IllegalArgumentException(\"The logger name '\" + originalName + \"' is either empty or ends with a separator\");\n        }\n<p>        // find the next separator in \"originalName\" starting from \"currentPos\"<br/>\n        int ix = getSeparatorIndexOf(originalName, currentPos);<br/>\n        if (ix &lt; 0) </p>\n{\n            // No more separators, so we are done but still need to register this last logger.\n            // So let ix point past the end!\n            ix = originalName.length();\n        }\n<p>        String nameComponent = originalName.substring(currentPos, ix);<br/>\n        // Depending on specification use one of the two below:<br/>\n        String childName = currentName + CoreConstants.DOT + nameComponent; // DOTify any DOLLAR<br/>\n        // String childName = originalName.substring(0, ix); // unmodified part of original<br/>\n        // Accept empty components? Nope!<br/>\n        if (nameComponent.isEmpty()) </p>\n{\n            throw new IllegalArgumentException(\"The logger name '\" + originalName + \"' has an empty component starting at position \" + currentPos);\n        }\n<p>        // See whether the child logger exists, if not, create it<br/>\n        Logger childLogger;<br/>\n        synchronized (parentLogger) {<br/>\n            childLogger = parentLogger.getChildByName(childName); // does not check the childName; returns null if not found<br/>\n            if (childLogger == null) </p>\n{\n                // Depending on taste use this (which dotifies any dollars)\n                // childLogger = parentLogger.createChildByLastNamePart(nameComponent); // checks that name component has no DOT or DOLLAR\n                // or this (which keeps the DOT or DOLLAR as is); this is in the original (this means that the root must have the empty name)\n                childLogger = parentLogger.createChildByName(childName); // checks that name component beyond parent's name has no DOT or DOLLAR\n                loggerCache.put(childName, childLogger);\n                incSize();\n            }\n<p>            assert childLogger != null;<br/>\n        }<br/>\n        // (tail)-recursive call if not done<br/>\n        if (ix &lt; originalName.length()) </p>\n{\n            createLoggerPathRecursively(originalName, childName, ix + 1, childLogger);\n        }\n<p>    }</p>\n            </div>\n</div>\n", 
                "renderHeader": true, 
                "styleClass": "", 
                "id": "descriptionmodule"
            }, 
            {
                "weight": 300, 
                "headerLinks": {
                    "groups": [], 
                    "links": []
                }, 
                "contentId": "6d908a7160df2586b26e1d86a1ad3e4b", 
                "subpanelHtmls": [], 
                "label": "Attachments", 
                "completeKey": "com.atlassian.jira.plugins.jira-dnd-attachment-plugin:dnd-metadata", 
                "prefix": "", 
                "html": "<div id=\"dnd-metadata-webpanel\" data-can-attach=\"false\" data-project-type=\"software\" data-upload-limit=\"10485760\"></div>", 
                "renderHeader": true, 
                "styleClass": "", 
                "id": "dnd-metadata"
            }, 
            {
                "weight": 900, 
                "headerLinks": {
                    "groups": [], 
                    "links": []
                }, 
                "contentId": "7c3b6d5c4fb77e1e582c27fae34ebbbb", 
                "subpanelHtmls": [], 
                "label": "Activity", 
                "completeKey": "com.atlassian.jira.jira-view-issue-plugin:activitymodule", 
                "prefix": "", 
                "html": "\n<big-pipe data-id=\"activity-panel-pipe-id\" style=\"height: 70px\">\n    <div></div>\n</big-pipe>\n", 
                "renderHeader": true, 
                "styleClass": "", 
                "id": "activitymodule"
            }
        ], 
        "rightPanels": [
            {
                "weight": 10, 
                "headerLinks": {
                    "groups": [], 
                    "links": []
                }, 
                "contentId": "db5bcfbb5fbfa4f1a4754b29dabfa59c", 
                "subpanelHtmls": [], 
                "label": "People", 
                "completeKey": "com.atlassian.jira.jira-view-issue-plugin:peoplemodule", 
                "prefix": "", 
                "html": "\n\n\n\n\n\n<ul class=\"item-details\" id=\"peopledetails\">\n    <li class=\"people-details\">\n                                \n<dl>\n    <dt>Assignee:</dt>\n    <dd>\n        <span id=\"assignee-val\" class=\"view-issue-field\">\n\n            <span class=\"user-hover\" id=\"issue_summary_assignee_logback-dev\" rel=\"logback-dev\" data-user='{&quot;avatarUrl&quot;:&quot;https://jira.qos.ch/secure/useravatar?size=xsmall&amp;avatarId=10122&quot;,&quot;displayName&quot;:&quot;Logback dev list&quot;,&quot;emailAddress&quot;:&quot;logback-dev@qos.ch&quot;,&quot;username&quot;:&quot;logback-dev&quot;}'>\n            \n\n    <span class=\"aui-avatar aui-avatar-small\"><span class=\"aui-avatar-inner\"><img src=\"https://jira.qos.ch/secure/useravatar?size=small&amp;avatarId=10122\" alt=\"logback-dev\" /></span></span>\n            Logback dev list\n        </span>\n    </span>\n            </dd>\n</dl>                                            \n<dl>\n    <dt>Reporter:</dt>\n    <dd>\n        <span id=\"reporter-val\" class=\"view-issue-field\">\n\n            <span class=\"user-hover\" id=\"issue_summary_reporter_dtonhofer\" rel=\"dtonhofer\" data-user='{&quot;avatarUrl&quot;:&quot;https://jira.qos.ch/secure/useravatar?size=xsmall&amp;avatarId=10122&quot;,&quot;displayName&quot;:&quot;David Tonhofer&quot;,&quot;emailAddress&quot;:&quot;bughunt@gluino.name&quot;,&quot;username&quot;:&quot;dtonhofer&quot;}'>\n            \n\n    <span class=\"aui-avatar aui-avatar-small\"><span class=\"aui-avatar-inner\"><img src=\"https://jira.qos.ch/secure/useravatar?size=small&amp;avatarId=10122\" alt=\"dtonhofer\" /></span></span>\n            David Tonhofer\n        </span>\n    </span>\n    </dd>\n</dl>                        </li>\n</ul>\n    <ul class=\"item-details\">\n        <li>\n                            <dl>\n        <dt>Votes:</dt>\n        <dd>\n                                <span id=\"vote-data\" class=\"aui-badge vote-state-off\">0</span>\n            \n                                                <span id=\"vote-label\" title=\"You have to be logged in to vote for an issue.\">Vote for this issue</span>\n                    </dd>\n    </dl>\n                                <dl>\n        <dt>Watchers:</dt>\n        <dd>\n                                \n                                    <span id=\"watcher-data\" class=\"aui-badge watch-state-off\">1</span>\n            \n                                        <span id=\"watch-label\" title=\"You have to be logged in to watch an issue.\">Start watching this issue</span>\n                    </dd>\n    </dl>\n            </li>\n    </ul>\n", 
                "renderHeader": true, 
                "styleClass": "", 
                "id": "peoplemodule"
            }, 
            {
                "weight": 40, 
                "headerLinks": {
                    "groups": [], 
                    "links": []
                }, 
                "contentId": "1c800fa65f5b46468d7a1464b348e55c", 
                "subpanelHtmls": [], 
                "label": "Dates", 
                "completeKey": "com.atlassian.jira.jira-view-issue-plugin:datesmodule", 
                "prefix": "", 
                "html": "\n<ul class=\"item-details\">\n    <li>\n            <dl class=\"dates\">\n            <dt>Created:</dt>\n            <dd class=\"date user-tz\"  title=\"20/Dec/12 7:39 PM\" >\n                <span data-name=\"Created\" id=\"created-val\"  data-fieldtype=\"datetime\"  >\n                                                                                                        <time class=\"livestamp\" datetime=\"2012-12-20T19:39:21+0100\">20/Dec/12 7:39 PM</time>                                                                                         </span>\n            </dd>\n        </dl>\n            <dl class=\"dates\">\n            <dt>Updated:</dt>\n            <dd class=\"date user-tz\"  title=\"08/Jan/13 4:24 PM\" >\n                <span data-name=\"Updated\" id=\"updated-val\"  data-fieldtype=\"datetime\"  >\n                                                                                                        <time class=\"livestamp\" datetime=\"2013-01-08T16:24:29+0100\">08/Jan/13 4:24 PM</time>                                                                                         </span>\n            </dd>\n        </dl>\n        </li>\n</ul>\n", 
                "renderHeader": true, 
                "styleClass": "", 
                "id": "datesmodule"
            }
        ], 
        "infoPanels": []
    }, 
    "issue": {
        "operations": {
            "linkGroups": [
                {
                    "groups": [
                        {
                            "groups": [], 
                            "id": "ops-login-lnk_container", 
                            "links": [
                                {
                                    "href": "/login.jsp?os_destination=%2Fsecure%2FAjaxIssueAction%21default.jspa%3FissueKey%3DLOGBACK-781%26decorator%3Dnone%26prefetch%3Dfalse%26shouldUpdateCurrentProject%3Dfalse%26loadFields%3Dfalse%26_%3D1541138840233", 
                                    "contentId": "91f81c91be285f9161d0740f9e06e7c0", 
                                    "title": "Log In", 
                                    "id": "ops-login-lnk", 
                                    "label": "Log In"
                                }
                            ]
                        }
                    ], 
                    "id": "view.issue.opsbar", 
                    "links": []
                }, 
                {
                    "groups": [
                        {
                            "groups": [], 
                            "header": {
                                "iconClass": "icon-default aui-icon aui-icon-small aui-iconfont-export", 
                                "title": "Export this issue in another format", 
                                "id": "viewissue-export", 
                                "label": "Export"
                            }, 
                            "id": "view.issue.exports", 
                            "links": [
                                {
                                    "contentId": "501ec882f8641bc0a91f8bbaf5325a4c", 
                                    "href": "/si/jira.issueviews:issue-xml/LOGBACK-781/LOGBACK-781.xml", 
                                    "id": "jira.issueviews:issue-xml", 
                                    "label": "XML"
                                }, 
                                {
                                    "contentId": "ea9e2dd7c8ee5187941d3b88a32220f7", 
                                    "href": "/si/jira.issueviews:issue-word/LOGBACK-781/LOGBACK-781.doc", 
                                    "id": "jira.issueviews:issue-word", 
                                    "label": "Word"
                                }, 
                                {
                                    "contentId": "23f24a64a50992324ae7c2d7f525174e", 
                                    "href": "/si/jira.issueviews:issue-html/LOGBACK-781/LOGBACK-781.html", 
                                    "id": "jira.issueviews:issue-html", 
                                    "label": "Printable"
                                }
                            ]
                        }
                    ], 
                    "id": "jira.issue.tools", 
                    "links": []
                }
            ]
        }, 
        "status": {
            "id": "1", 
            "iconUrl": "/images/icons/statuses/open.png", 
            "description": "The issue is open and ready for the assignee to start work on it.", 
            "name": "Open"
        }, 
        "isEditable": false, 
        "summaryContentId": "f67e4a0bfcd3e43e5a8c9530824a4a33", 
        "summary": "ch.qos.logback.classic.LoggerContext.getLogger() is hard to understand; can be shortend with a little recursion", 
        "project": {
            "projectType": "software", 
            "name": "logback", 
            "avatarUrls": {
                "24x24": "https://jira.qos.ch/secure/projectavatar?size=small&pid=10040&avatarId=10402", 
                "32x32": "https://jira.qos.ch/secure/projectavatar?size=medium&pid=10040&avatarId=10402", 
                "48x48": "https://jira.qos.ch/secure/projectavatar?pid=10040&avatarId=10402", 
                "16x16": "https://jira.qos.ch/secure/projectavatar?size=xsmall&pid=10040&avatarId=10402"
            }, 
            "key": "LOGBACK", 
            "systemAvatar": false, 
            "id": 10040
        }, 
        "key": "LOGBACK-781", 
        "id": 11393, 
        "metadata": {
            "issue-project-type": "software", 
            "issue-key": "LOGBACK-781", 
            "can-search-users": "false", 
            "default-avatar-url": "https://jira.qos.ch/secure/useravatar?size=xsmall&avatarId=10123", 
            "can-edit-watchers": "false"
        }
    }, 
    "readTime": 1552211765947
}