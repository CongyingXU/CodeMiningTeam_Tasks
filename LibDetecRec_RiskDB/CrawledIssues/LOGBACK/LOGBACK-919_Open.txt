{
    "errorCollection": {
        "errorMessages": [], 
        "errors": {}
    }, 
    "fields": [], 
    "removedContentIds": {}, 
    "atl_token": "APH4-RW9H-DTE9-IR2M|9c6ce1eed2aafabaa1c5637bb65ca868df1fad43|lout", 
    "panels": {
        "leftPanels": [
            {
                "weight": 100, 
                "headerLinks": {
                    "groups": [], 
                    "links": []
                }, 
                "contentId": "ed9468fa8bce55449439b864c5e5de88", 
                "subpanelHtmls": [], 
                "label": "Details", 
                "completeKey": "com.atlassian.jira.jira-view-issue-plugin:details-module", 
                "prefix": "", 
                "html": "\n\n\n\n\n\n\n\n\n\n\n<ul id=\"issuedetails\" class=\"property-list two-cols\">\n                \n<li class=\"item\">\n    <div class=\"wrap\">\n        <strong class=\"name\">Type:</strong>\n        <span id=\"type-val\" class=\"value\">\n                        <img  alt=\"\" height=\"16\" src=\"/secure/viewavatar?size=xsmall&amp;avatarId=11103&amp;avatarType=issuetype\" title=\"Bug - A problem which impairs or prevents the functions of the product.\" width=\"16\" /> Bug\n        </span>\n    </div>\n</li>                    <li class=\"item item-right\">\n    <div class=\"wrap\">\n        <strong class=\"name\">Status:</strong>\n            <span id=\"status-val\" class=\"value\">\n                                <span class=\" jira-issue-status-lozenge aui-lozenge jira-issue-status-lozenge-blue-gray jira-issue-status-lozenge-new jira-issue-status-lozenge-max-width-medium\" data-tooltip=\"&lt;span class=&quot;jira-issue-status-tooltip-title&quot;&gt;Open&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;jira-issue-status-tooltip-desc&quot;&gt;The issue is open and ready for the assignee to start work on it.&lt;/span&gt;\">Open</span>            </span>\n            </div>\n</li>    \n                        <li class=\"item new\">\n    <div class=\"wrap\">\n        <strong class=\"name\">Priority:</strong>\n        <span id=\"priority-val\" class=\"value\">\n                                        <img  alt=\"\" height=\"16\" src=\"/images/icons/priorities/critical.svg\" title=\"Critical - Crashes, loss of data, severe memory leak.\" width=\"16\" /> Critical\n                    </span>\n    </div>\n</li>                                \n<li class=\"item item-right\">\n    <div class=\"wrap\">\n        <strong class=\"name\">Resolution:</strong>\n        <span id=\"resolution-val\" class=\"value unresolved\" >\n                            Unresolved\n                    </span>\n    </div>\n</li>                                \n\n<li class=\"item\">\n    <div class=\"wrap\">\n        <strong class=\"name\">Affects Version/s:</strong>\n        <span id=\"versions-val\" class=\"value\">\n                                        <span class=\"shorten\" id=\"versions-field\">\n                                            <span title=\"1.0.13 \">1.0.13</span>                                    </span>\n                    </span>\n    </div>\n</li>                                \n<li class=\"item item-right\">\n    <div class=\"wrap\">\n        <strong class=\"name\">Fix Version/s:</strong>\n        <span id=\"fixfor-val\" class=\"value\">\n                                        None\n                    </span>\n    </div>\n</li>                                \n\n<li class=\"item\">\n    <div class=\"wrap\">\n        <strong class=\"name\">Component/s:</strong>\n        <span id=\"components-val\" class=\"value\">\n                                        <span class=\"shorten\" id=\"components-field\">\n                                            <a href=\"/issues/?jql=project+%3D+LOGBACK+AND+component+%3D+logback-core\" title=\"logback-core \">logback-core</a>                                    </span>\n                    </span>\n    </div>\n</li>                                    \n\n\n<li class=\"item full-width\">\n    <div class=\"wrap\" id=\"wrap-labels\">\n        <strong class=\"name\">Labels:</strong>\n                <div class=\"labels-wrap value\">\n            <span class=\"labels\" id=\"labels-11774-value\">None</span>\n            </div>\n    </div>\n</li>                                <li class=\"item full-width\">\n    <div class=\"wrap\">\n        <strong class=\"name\">Environment:</strong>\n        <div id=\"environment-val\" class=\"value\">\n                                          <div class=\"code panel\" style=\"border-width: 1px;\"><div class=\"codeContent panelContent\">\n<pre class=\"code-java\">java.vendor=Sun Microsystems Inc.\njava.version=1.6.0_45\nos.name=Windows 7\nos.version=6.1\nos.arch=amd64\n</pre>\n</div></div>\n      \n                    </div>\n    </div>\n</li>        </ul>\n\n", 
                "renderHeader": true, 
                "styleClass": "", 
                "id": "details-module"
            }, 
            {
                "weight": 200, 
                "headerLinks": {
                    "groups": [], 
                    "links": []
                }, 
                "contentId": "08f0c8d61963dc0bf9493d16b14778a0", 
                "subpanelHtmls": [], 
                "label": "Description", 
                "completeKey": "com.atlassian.jira.jira-view-issue-plugin:descriptionmodule", 
                "prefix": "", 
                "html": "<div id=\"description-val\" class=\"field-ignore-highlight\">\n    <div class=\"user-content-block\">\n                    <p>The following junit test shows that <tt>RollingFileAppender</tt> along with <tt>TimeBasedRollingPolicy</tt> and <tt>SizeAndTimeBasedFNATP</tt> do ignore maxFileSize property.</p>\n\n<div class=\"code panel\" style=\"border-width: 1px;\"><div class=\"codeContent panelContent\">\n<pre class=\"code-java\">java.lang.AssertionError: test.log size is 25.7MB which is 71.6% more than 15.0MB requested\njava.lang.AssertionError: test.log size is 27.7MB which is 176.9% more than 10.0MB requested\n</pre>\n</div></div>\n\n<div class=\"code panel\" style=\"border-width: 1px;\"><div class=\"codeContent panelContent\">\n<pre class=\"code-java\"><span class=\"code-keyword\">package</span> third.party.logback;\n\n<span class=\"code-keyword\">import</span> <span class=\"code-keyword\">static</span> org.junit.Assert.*;\n<span class=\"code-keyword\">import</span> java.io.File;\n<span class=\"code-keyword\">import</span> java.text.SimpleDateFormat;\n<span class=\"code-keyword\">import</span> java.util.Arrays;\n<span class=\"code-keyword\">import</span> java.util.Date;\n<span class=\"code-keyword\">import</span> java.util.HashSet;\n<span class=\"code-keyword\">import</span> java.util.Random;\n<span class=\"code-keyword\">import</span> java.util.Set;\n<span class=\"code-keyword\">import</span> org.junit.Before;\n<span class=\"code-keyword\">import</span> org.junit.BeforeClass;\n<span class=\"code-keyword\">import</span> org.junit.Test;\n<span class=\"code-keyword\">import</span> org.slf4j.LoggerFactory;\n<span class=\"code-keyword\">import</span> ch.qos.logback.classic.Logger;\n<span class=\"code-keyword\">import</span> ch.qos.logback.classic.LoggerContext;\n<span class=\"code-keyword\">import</span> ch.qos.logback.classic.encoder.PatternLayoutEncoder;\n<span class=\"code-keyword\">import</span> ch.qos.logback.classic.spi.ILoggingEvent;\n<span class=\"code-keyword\">import</span> ch.qos.logback.core.Appender;\n<span class=\"code-keyword\">import</span> ch.qos.logback.core.rolling.RollingFileAppender;\n<span class=\"code-keyword\">import</span> ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP;\n<span class=\"code-keyword\">import</span> ch.qos.logback.core.rolling.TimeBasedRollingPolicy;\n\n<span class=\"code-keyword\">public</span> class TimeRotationTest {\n  <span class=\"code-keyword\">private</span> <span class=\"code-keyword\">static</span> File _tmpDir;\n  <span class=\"code-keyword\">private</span> Set&lt;File&gt; _filesExpected;\n\n  @BeforeClass\n  <span class=\"code-keyword\">public</span> <span class=\"code-keyword\">static</span> void setupForAll() <span class=\"code-keyword\">throws</span> Exception {\n    <span class=\"code-object\">String</span> tmp = <span class=\"code-object\">System</span>.getProperty(<span class=\"code-quote\">\"java.io.tmpdir\"</span>) + <span class=\"code-quote\">\"/timedwindowlogbacktest/\"</span> + <span class=\"code-object\">System</span>.currentTimeMillis();\n    _tmpDir = <span class=\"code-keyword\">new</span> File(tmp);\n    _tmpDir.mkdirs();\n    assertTrue(_tmpDir + <span class=\"code-quote\">\" not created\"</span>, _tmpDir.isDirectory());\n    assertEquals(_tmpDir + <span class=\"code-quote\">\" not empty\"</span>, 0, _tmpDir.list().length);\n    <span class=\"code-keyword\">for</span>(<span class=\"code-object\">String</span> p : <span class=\"code-keyword\">new</span> <span class=\"code-object\">String</span>[]{ <span class=\"code-quote\">\"java.vendor\"</span>, <span class=\"code-quote\">\"java.version\"</span>, <span class=\"code-quote\">\"os.name\"</span>, <span class=\"code-quote\">\"os.version\"</span>, <span class=\"code-quote\">\"os.arch\"</span> } ) {\n      <span class=\"code-object\">System</span>.out.println(p + <span class=\"code-quote\">\"=\"</span> + <span class=\"code-object\">System</span>.getProperty(p));\n    }\n    <span class=\"code-object\">System</span>.out.println(<span class=\"code-quote\">\"using \"</span> + _tmpDir.getAbsolutePath() + <span class=\"code-quote\">\"\\n\"</span>);\n  }\n\n  @Before\n  <span class=\"code-keyword\">public</span> void setup() {\n    _filesExpected = <span class=\"code-keyword\">new</span> HashSet&lt;File&gt;();\n  }\n\n  <span class=\"code-keyword\">private</span> void verifyFile(File file, <span class=\"code-object\">long</span> maxSize) {\n    <span class=\"code-object\">String</span> name = file.getName();\n    assertTrue(name + <span class=\"code-quote\">\" duplicate\"</span>, _filesExpected.add(file));\n    assertTrue(name + <span class=\"code-quote\">\" does not exist\"</span>, file.canRead());\n    assertTrue(name + <span class=\"code-quote\">\" size is zero\"</span>, file.length() &gt; 0);\n    <span class=\"code-object\">float</span> percent = 100f * file.length() / maxSize - 100f;\n    <span class=\"code-object\">String</span> msg = <span class=\"code-object\">String</span>.format(<span class=\"code-quote\">\"%s size is %.1fMB which is %.1f%% more than %.1fMB requested\"</span>,\n            name, file.length()/1024f/1024, percent, maxSize/1024f/1024);\n    assertTrue(msg, file.length() &lt;= maxSize * 1.1); <span class=\"code-comment\">// give it 10% slack\n</span>  }\n\n  <span class=\"code-keyword\">private</span> Appender&lt;ILoggingEvent&gt; createAppender(<span class=\"code-object\">String</span> basename_, <span class=\"code-object\">String</span> rotated_, <span class=\"code-object\">long</span> maxFileSize_, <span class=\"code-object\">int</span> maxFiles_, <span class=\"code-object\">boolean</span> append_) {\n    LoggerContext context = (LoggerContext) LoggerFactory.getILoggerFactory();\n\n    SizeAndTimeBasedFNATP triggeringPolicy = <span class=\"code-keyword\">new</span> SizeAndTimeBasedFNATP&lt;ILoggingEvent&gt;();\n    triggeringPolicy.setMaxFileSize(<span class=\"code-object\">String</span>.valueOf(maxFileSize_));\n\n    TimeBasedRollingPolicy&lt;ILoggingEvent&gt; rollingPolicy = <span class=\"code-keyword\">new</span> TimeBasedRollingPolicy&lt;ILoggingEvent&gt;();\n    rollingPolicy.setContext(context);\n    rollingPolicy.setTimeBasedFileNamingAndTriggeringPolicy(triggeringPolicy);\n    rollingPolicy.setMaxHistory(maxFiles_ - 1);\n    rollingPolicy.setFileNamePattern(rotated_);\n\n    triggeringPolicy.setContext(context);\n    triggeringPolicy.setTimeBasedRollingPolicy(rollingPolicy);\n\n    RollingFileAppender&lt;ILoggingEvent&gt; appender = <span class=\"code-keyword\">new</span> RollingFileAppender&lt;ILoggingEvent&gt;();\n    appender.setFile(basename_);\n    appender.setAppend(append_);\n    appender.setRollingPolicy(rollingPolicy);\n    appender.setTriggeringPolicy(triggeringPolicy);\n    rollingPolicy.setParent(appender);\n    rollingPolicy.start();\n    triggeringPolicy.start();\n\n    PatternLayoutEncoder layout = <span class=\"code-keyword\">new</span> PatternLayoutEncoder();\n    layout.setPattern(<span class=\"code-quote\">\"%d{YYYY-MM-dd HH:mm:ss.SSS} [%thread] %level %logger %msg%n\"</span>);\n    layout.setContext(context);\n    layout.start();\n\n    appender.setEncoder(layout);\n    appender.setContext(context);\n    appender.start();\n    <span class=\"code-keyword\">return</span> appender;\n  }\n\n  <span class=\"code-keyword\">private</span> void doTest(<span class=\"code-keyword\">final</span> <span class=\"code-object\">String</span> testname, <span class=\"code-object\">String</span> basenameS, <span class=\"code-object\">String</span> rotatedS, <span class=\"code-object\">boolean</span> compress, <span class=\"code-object\">int</span> maxFiles, <span class=\"code-object\">long</span> maxSize) <span class=\"code-keyword\">throws</span> Exception {\n    File testDir = <span class=\"code-keyword\">new</span> File(_tmpDir, testname);\n    testDir.mkdirs();\n    assertEquals(testDir + <span class=\"code-quote\">\" not empty\"</span>, 0, testDir.listFiles().length);\n\n    File basename = <span class=\"code-keyword\">new</span> File(testDir, basenameS);\n    File rotated  = <span class=\"code-keyword\">new</span> File(testDir, rotatedS + (compress ? <span class=\"code-quote\">\".gz\"</span> : \"\"));\n    <span class=\"code-object\">boolean</span> append = <span class=\"code-keyword\">false</span>;\n\n    Appender&lt;ILoggingEvent&gt; appender = createAppender(basename.getPath(), rotated.getPath(), maxSize, maxFiles, append);\n    org.slf4j.Logger slf4jLog = LoggerFactory.getLogger(testname);  \n    Logger logger = (Logger) slf4jLog; \n    logger.addAppender(appender);\n\n    <span class=\"code-comment\">// log some stuff, loads of it\n</span>    Random rnd = <span class=\"code-keyword\">new</span> Random();\n    <span class=\"code-object\">String</span> msg = <span class=\"code-quote\">\"{} During the application {} in the <span class=\"code-keyword\">case</span> <span class=\"code-object\">long</span>-lived application on {} when {} is another random\"</span>;\n    <span class=\"code-keyword\">for</span>(<span class=\"code-object\">int</span> i = 0; i &lt; 200000; ++i) {\n      logger.info(msg, <span class=\"code-object\">System</span>.nanoTime(), <span class=\"code-keyword\">new</span> Date(), rnd.nextGaussian());\n    }\n\n    <span class=\"code-keyword\">for</span>(<span class=\"code-object\">int</span> i = 0; i &lt; maxFiles - 1; ++i) {\n      <span class=\"code-object\">String</span> file = <span class=\"code-object\">String</span>.format(resolveFilename(rotated.getPath()), i);\n      verifyFile(<span class=\"code-keyword\">new</span> File(file), maxSize);\n    }\n\n    verifyFile(basename, maxSize);\n\n    Set&lt;File&gt; filesPresent = <span class=\"code-keyword\">new</span> HashSet&lt;File&gt;(Arrays.asList(testDir.listFiles()));\n    filesPresent.removeAll(_filesExpected);\n    assertTrue(<span class=\"code-quote\">\"unexpected \"</span> + filesPresent.size() + <span class=\"code-quote\">\" files: \"</span> + filesPresent, filesPresent.isEmpty());\n  }\n\n  <span class=\"code-keyword\">private</span> <span class=\"code-object\">String</span> resolveFilename(<span class=\"code-object\">String</span> rotatedPattern_) {\n    <span class=\"code-object\">String</span> dateFormat = <span class=\"code-keyword\">null</span>;\n    <span class=\"code-keyword\">final</span> <span class=\"code-object\">String</span> DP = <span class=\"code-quote\">\"%d{\"</span>;\n    <span class=\"code-object\">int</span> i = rotatedPattern_.indexOf(DP);\n    <span class=\"code-object\">int</span> j;\n    <span class=\"code-keyword\">if</span> (i &gt; -1) {\n      j = rotatedPattern_.indexOf('}');\n      <span class=\"code-keyword\">if</span> (j &gt; DP.length() + i) {\n        dateFormat = rotatedPattern_.substring(i + DP.length(), j);\n      }\n    } <span class=\"code-keyword\">else</span> {\n      dateFormat = <span class=\"code-quote\">\"yyyy-MM-dd\"</span>;\n      i = rotatedPattern_.indexOf(<span class=\"code-quote\">\"%d\"</span>);\n      j = i + 1;\n    }\n    <span class=\"code-object\">String</span> s = rotatedPattern_.substring(0, i)\n            + <span class=\"code-keyword\">new</span> SimpleDateFormat(dateFormat).format(<span class=\"code-keyword\">new</span> Date())\n            + rotatedPattern_.substring(j + 1);\n    <span class=\"code-keyword\">return</span> s.replace(<span class=\"code-quote\">\"%i\"</span>, <span class=\"code-quote\">\"%d\"</span>);\n  }\n\n<span class=\"code-comment\">//  @Test <span class=\"code-keyword\">public</span> void testDailyMax3_5MB() <span class=\"code-keyword\">throws</span> Exception { doTest(<span class=\"code-quote\">\"daily_max3_5MB_each\"</span>, <span class=\"code-quote\">\"test.log\"</span>, <span class=\"code-quote\">\"test_%d.log.%i\"</span>, <span class=\"code-keyword\">false</span>, 3, 5 * 1024 * 1024); }\n</span>  @Test <span class=\"code-keyword\">public</span> void testDailyMax8_5MB() <span class=\"code-keyword\">throws</span> Exception { doTest(<span class=\"code-quote\">\"daily_max8_5MB_each\"</span>, <span class=\"code-quote\">\"test.log\"</span>, <span class=\"code-quote\">\"test_%d.log.%i\"</span>, <span class=\"code-keyword\">false</span>, 8, 5 * 1024 * 1024); }\n\n  @Test <span class=\"code-keyword\">public</span> void testDailyMax4_10MB() <span class=\"code-keyword\">throws</span> Exception { doTest(<span class=\"code-quote\">\"daily_max4_10MB_each\"</span>, <span class=\"code-quote\">\"test.log\"</span>, <span class=\"code-quote\">\"test_%d.log.%i\"</span>, <span class=\"code-keyword\">false</span>, 4, 10 * 1024 * 1024); }\n<span class=\"code-comment\">//  @Test <span class=\"code-keyword\">public</span> void testDailyMax2_10MB() <span class=\"code-keyword\">throws</span> Exception { doTest(<span class=\"code-quote\">\"daily_max2_10MB_each\"</span>, <span class=\"code-quote\">\"test.log\"</span>, <span class=\"code-quote\">\"test_%d.log.%i\"</span>, <span class=\"code-keyword\">false</span>, 2, 10 * 1024 * 1024); }\n</span>\n  @Test <span class=\"code-keyword\">public</span> void testOnePerDay_max2_30MB() <span class=\"code-keyword\">throws</span> Exception { doTest(<span class=\"code-quote\">\"one_daily_max2_30MB_each\"</span>, <span class=\"code-quote\">\"test.log\"</span>, <span class=\"code-quote\">\"test_%d.log\"</span>, <span class=\"code-keyword\">false</span>, 2, 30 * 1024 * 1024); }\n  @Test <span class=\"code-keyword\">public</span> void testOnePerDay_max2_15MB() <span class=\"code-keyword\">throws</span> Exception { doTest(<span class=\"code-quote\">\"one_daily_max2_15MB_each\"</span>, <span class=\"code-quote\">\"test.log\"</span>, <span class=\"code-quote\">\"test_%d.log\"</span>, <span class=\"code-keyword\">false</span>, 2, 15 * 1024 * 1024); }\n\n  @Test <span class=\"code-keyword\">public</span> void testCustomPattern() <span class=\"code-keyword\">throws</span> Exception { doTest(<span class=\"code-quote\">\"custom_pattern\"</span>, <span class=\"code-quote\">\"test.log\"</span>, <span class=\"code-quote\">\"test_%d{yyyyMMdd}.log\"</span>, <span class=\"code-keyword\">false</span>, 2, 20 * 1024 * 1024); }\n\n  @Test <span class=\"code-keyword\">public</span> void testHourly10MB() <span class=\"code-keyword\">throws</span> Exception { doTest(<span class=\"code-quote\">\"hourly10\"</span>, <span class=\"code-quote\">\"test.log\"</span>, <span class=\"code-quote\">\"test_%d{yyyyMMdd_HH}.log\"</span>, <span class=\"code-keyword\">false</span>, 2, 10 * 1024 * 1024); }\n  @Test <span class=\"code-keyword\">public</span> void testHourly20MB() <span class=\"code-keyword\">throws</span> Exception { doTest(<span class=\"code-quote\">\"hourly20\"</span>, <span class=\"code-quote\">\"test.log\"</span>, <span class=\"code-quote\">\"test_%d{yyyyMMdd_HH}.log\"</span>, <span class=\"code-keyword\">false</span>, 2, 20 * 1024 * 1024); }\n}\n</pre>\n</div></div>\n            </div>\n</div>\n", 
                "renderHeader": true, 
                "styleClass": "", 
                "id": "descriptionmodule"
            }, 
            {
                "weight": 300, 
                "headerLinks": {
                    "groups": [], 
                    "links": []
                }, 
                "contentId": "6d908a7160df2586b26e1d86a1ad3e4b", 
                "subpanelHtmls": [], 
                "label": "Attachments", 
                "completeKey": "com.atlassian.jira.plugins.jira-dnd-attachment-plugin:dnd-metadata", 
                "prefix": "", 
                "html": "<div id=\"dnd-metadata-webpanel\" data-can-attach=\"false\" data-project-type=\"software\" data-upload-limit=\"10485760\"></div>", 
                "renderHeader": true, 
                "styleClass": "", 
                "id": "dnd-metadata"
            }, 
            {
                "weight": 900, 
                "headerLinks": {
                    "groups": [], 
                    "links": []
                }, 
                "contentId": "7c3b6d5c4fb77e1e582c27fae34ebbbb", 
                "subpanelHtmls": [], 
                "label": "Activity", 
                "completeKey": "com.atlassian.jira.jira-view-issue-plugin:activitymodule", 
                "prefix": "", 
                "html": "\n<big-pipe data-id=\"activity-panel-pipe-id\" style=\"height: 70px\">\n    <div></div>\n</big-pipe>\n", 
                "renderHeader": true, 
                "styleClass": "", 
                "id": "activitymodule"
            }
        ], 
        "rightPanels": [
            {
                "weight": 10, 
                "headerLinks": {
                    "groups": [], 
                    "links": []
                }, 
                "contentId": "d081fbc2bbdef5e7539eb9ea47f94f0f", 
                "subpanelHtmls": [], 
                "label": "People", 
                "completeKey": "com.atlassian.jira.jira-view-issue-plugin:peoplemodule", 
                "prefix": "", 
                "html": "\n\n\n\n\n\n<ul class=\"item-details\" id=\"peopledetails\">\n    <li class=\"people-details\">\n                                \n<dl>\n    <dt>Assignee:</dt>\n    <dd>\n        <span id=\"assignee-val\" class=\"view-issue-field\">\n\n            <span class=\"user-hover\" id=\"issue_summary_assignee_logback-dev\" rel=\"logback-dev\" data-user='{&quot;avatarUrl&quot;:&quot;https://jira.qos.ch/secure/useravatar?size=xsmall&amp;avatarId=10122&quot;,&quot;displayName&quot;:&quot;Logback dev list&quot;,&quot;emailAddress&quot;:&quot;logback-dev@qos.ch&quot;,&quot;username&quot;:&quot;logback-dev&quot;}'>\n            \n\n    <span class=\"aui-avatar aui-avatar-small\"><span class=\"aui-avatar-inner\"><img src=\"https://jira.qos.ch/secure/useravatar?size=small&amp;avatarId=10122\" alt=\"logback-dev\" /></span></span>\n            Logback dev list\n        </span>\n    </span>\n            </dd>\n</dl>                                            \n<dl>\n    <dt>Reporter:</dt>\n    <dd>\n        <span id=\"reporter-val\" class=\"view-issue-field\">\n\n            <span class=\"user-hover\" id=\"issue_summary_reporter_michal\" rel=\"michal\" data-user='{&quot;avatarUrl&quot;:&quot;https://jira.qos.ch/secure/useravatar?size=xsmall&amp;avatarId=10122&quot;,&quot;displayName&quot;:&quot;Michal Jacykiewicz&quot;,&quot;emailAddress&quot;:&quot;michal.jacykiewicz@morganstanley.com&quot;,&quot;username&quot;:&quot;michal&quot;}'>\n            \n\n    <span class=\"aui-avatar aui-avatar-small\"><span class=\"aui-avatar-inner\"><img src=\"https://jira.qos.ch/secure/useravatar?size=small&amp;avatarId=10122\" alt=\"michal\" /></span></span>\n            Michal Jacykiewicz\n        </span>\n    </span>\n    </dd>\n</dl>                        </li>\n</ul>\n    <ul class=\"item-details\">\n        <li>\n                            <dl>\n        <dt>Votes:</dt>\n        <dd>\n                                <span id=\"vote-data\" class=\"aui-badge vote-state-off\">0</span>\n            \n                                                <span id=\"vote-label\" title=\"You have to be logged in to vote for an issue.\">Vote for this issue</span>\n                    </dd>\n    </dl>\n                                <dl>\n        <dt>Watchers:</dt>\n        <dd>\n                                \n                                    <span id=\"watcher-data\" class=\"aui-badge watch-state-off\">2</span>\n            \n                                        <span id=\"watch-label\" title=\"You have to be logged in to watch an issue.\">Start watching this issue</span>\n                    </dd>\n    </dl>\n            </li>\n    </ul>\n", 
                "renderHeader": true, 
                "styleClass": "", 
                "id": "peoplemodule"
            }, 
            {
                "weight": 40, 
                "headerLinks": {
                    "groups": [], 
                    "links": []
                }, 
                "contentId": "9743c21a829df57ec66e1cbb7633bc90", 
                "subpanelHtmls": [], 
                "label": "Dates", 
                "completeKey": "com.atlassian.jira.jira-view-issue-plugin:datesmodule", 
                "prefix": "", 
                "html": "\n<ul class=\"item-details\">\n    <li>\n            <dl class=\"dates\">\n            <dt>Created:</dt>\n            <dd class=\"date user-tz\"  title=\"07/Nov/13 12:22 PM\" >\n                <span data-name=\"Created\" id=\"created-val\"  data-fieldtype=\"datetime\"  >\n                                                                                                        <time class=\"livestamp\" datetime=\"2013-11-07T12:22:43+0100\">07/Nov/13 12:22 PM</time>                                                                                         </span>\n            </dd>\n        </dl>\n            <dl class=\"dates\">\n            <dt>Updated:</dt>\n            <dd class=\"date user-tz\"  title=\"24/Nov/13 6:58 PM\" >\n                <span data-name=\"Updated\" id=\"updated-val\"  data-fieldtype=\"datetime\"  >\n                                                                                                        <time class=\"livestamp\" datetime=\"2013-11-24T18:58:14+0100\">24/Nov/13 6:58 PM</time>                                                                                         </span>\n            </dd>\n        </dl>\n        </li>\n</ul>\n", 
                "renderHeader": true, 
                "styleClass": "", 
                "id": "datesmodule"
            }
        ], 
        "infoPanels": []
    }, 
    "issue": {
        "operations": {
            "linkGroups": [
                {
                    "groups": [
                        {
                            "groups": [], 
                            "id": "ops-login-lnk_container", 
                            "links": [
                                {
                                    "href": "/login.jsp?os_destination=%2Fsecure%2FAjaxIssueAction%21default.jspa%3FissueKey%3DLOGBACK-919%26decorator%3Dnone%26prefetch%3Dfalse%26shouldUpdateCurrentProject%3Dfalse%26loadFields%3Dfalse%26_%3D1541138840233", 
                                    "contentId": "da8a12c499383a7fc690837eb9278f55", 
                                    "title": "Log In", 
                                    "id": "ops-login-lnk", 
                                    "label": "Log In"
                                }
                            ]
                        }
                    ], 
                    "id": "view.issue.opsbar", 
                    "links": []
                }, 
                {
                    "groups": [
                        {
                            "groups": [], 
                            "header": {
                                "iconClass": "icon-default aui-icon aui-icon-small aui-iconfont-export", 
                                "title": "Export this issue in another format", 
                                "id": "viewissue-export", 
                                "label": "Export"
                            }, 
                            "id": "view.issue.exports", 
                            "links": [
                                {
                                    "contentId": "27f26bf9ad8228f8789e527f318d11f4", 
                                    "href": "/si/jira.issueviews:issue-xml/LOGBACK-919/LOGBACK-919.xml", 
                                    "id": "jira.issueviews:issue-xml", 
                                    "label": "XML"
                                }, 
                                {
                                    "contentId": "8e12d8756d22626018ddf514d4c4192c", 
                                    "href": "/si/jira.issueviews:issue-word/LOGBACK-919/LOGBACK-919.doc", 
                                    "id": "jira.issueviews:issue-word", 
                                    "label": "Word"
                                }, 
                                {
                                    "contentId": "82b89411bd5559aa0e42f0aeae4d2278", 
                                    "href": "/si/jira.issueviews:issue-html/LOGBACK-919/LOGBACK-919.html", 
                                    "id": "jira.issueviews:issue-html", 
                                    "label": "Printable"
                                }
                            ]
                        }
                    ], 
                    "id": "jira.issue.tools", 
                    "links": []
                }
            ]
        }, 
        "status": {
            "id": "1", 
            "iconUrl": "/images/icons/statuses/open.png", 
            "description": "The issue is open and ready for the assignee to start work on it.", 
            "name": "Open"
        }, 
        "isEditable": false, 
        "summaryContentId": "36b2b503e4e07ecf867259cc7588a30f", 
        "summary": "SizeAndTimeBasedFNATP.setMaxFileSize ignored", 
        "project": {
            "projectType": "software", 
            "name": "logback", 
            "avatarUrls": {
                "24x24": "https://jira.qos.ch/secure/projectavatar?size=small&pid=10040&avatarId=10402", 
                "32x32": "https://jira.qos.ch/secure/projectavatar?size=medium&pid=10040&avatarId=10402", 
                "48x48": "https://jira.qos.ch/secure/projectavatar?pid=10040&avatarId=10402", 
                "16x16": "https://jira.qos.ch/secure/projectavatar?size=xsmall&pid=10040&avatarId=10402"
            }, 
            "key": "LOGBACK", 
            "systemAvatar": false, 
            "id": 10040
        }, 
        "key": "LOGBACK-919", 
        "id": 11774, 
        "metadata": {
            "issue-project-type": "software", 
            "issue-key": "LOGBACK-919", 
            "can-search-users": "false", 
            "default-avatar-url": "https://jira.qos.ch/secure/useravatar?size=xsmall&avatarId=10123", 
            "can-edit-watchers": "false"
        }
    }, 
    "readTime": 1552210507982
}